# Generated by Django 3.1.7 on 2021-04-09 19:17

from datetime import datetime

import pytz
from django.contrib.auth.hashers import make_password
from django.db import migrations, transaction

TZ = pytz.timezone("UTC")


def load_demo_user(apps, schema_editor):
    # Create Demo User
    with transaction.atomic():
        User = apps.get_model("auth", "User")
        user = User.objects.create(
            username="demo",
            email="demo@example.com",
            password=make_password("demo"),
            first_name="Jane",
            last_name="Doe",
        )
        user.save()

    # Create Demo Profile
    with transaction.atomic():
        Profile = apps.get_model("portfoliohut", "Profile")
        profile = Profile(user=user)
        profile.save()

    # Add Cash Balance
    with transaction.atomic():
        CashBalance = apps.get_model("portfoliohut", "CashBalance")
        cb_action = "deposit"
        cb_date = datetime(year=2020, month=1, day=1, tzinfo=TZ)
        cb_value = 100_000.00
        CashBalance(
            profile=profile, action=cb_action, date_time=cb_date, value=cb_value
        ).save()

    # Add stocks actions
    with transaction.atomic():
        Stock = apps.get_model("portfoliohut", "Stock")
        stock_tickers = ["DIS", "NFLX", "GOOG", "NFLX"]
        stock_dates = [
            datetime(year=2020, month=1, day=20, tzinfo=TZ),
            datetime(year=2020, month=3, day=9, tzinfo=TZ),
            datetime(year=2020, month=5, day=10, tzinfo=TZ),
            datetime(year=2020, month=9, day=10, tzinfo=TZ),
        ]
        stock_actions = ["buy", "buy", "buy", "sell"]
        stock_quantities = [40, 100, 20, 30]
        stock_prices = [173.64, 346.49, 1403.26, 480.67]
        for st, sd, sa, sq, sp in zip(
            stock_tickers, stock_dates, stock_actions, stock_quantities, stock_prices
        ):
            Stock(
                profile=profile,
                ticker=st,
                action=sa,
                date_time=sd,
                price=sp,
                quantity=sq,
            ).save()


class Migration(migrations.Migration):

    dependencies = [
        ("portfoliohut", "0001_initial"),
    ]

    operations = [migrations.RunPython(load_demo_user)]
